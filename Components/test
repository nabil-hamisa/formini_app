import React, { useState, useEffect } from "react";

import { Button, Input } from "react-native-elements";
import { Picker } from "@react-native-picker/picker";

import {
  Image,
  ImageBackground,
  StyleSheet,
  Text,
  ScrollView,
  View,
} from "react-native";
import * as ImagePicker from "expo-image-picker";
import { Dimensions } from "react-native";
import { useNavigation } from "@react-navigation/native";
import useForm from "react-hooks-form-validator";

const { height, width } = Dimensions.get("screen");
const formConfig = {
  first_name: {
    required: true,
    min: 3,
    max: 20,
  },
  last_name: {
    min: 3,
    max: 20,
    required: true
  },
  profession: {
    min: 3,
    max: 20,
    required: true
  } ,
  gender: {
    required: true
  } ,
  mail: {
    min: 3,
    max: 20,
    required: true,
    patterns: [
      {
        regex: new RegExp(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/),
        errorMsg: "Please enter a Valid email !"
      }
    ]
  } ,
  phone: {
    min: 3,
    max: 20,
    required: true,
    patterns: [
      {
        regex: new RegExp(/^[0-9]/),
        errorMsg: "Please enter a Valid phone number !"
      }
    ]
  } ,
  adress: {
    min: 3,
    max: 20,
    required: true,
  } ,
  password: {
    min: 6,
    max: 20,
    required: true,
  } ,
};
function SignUp() {
  const navigation = useNavigation();
  const [file, setImage] = useState(null);
  const [fields, formData] = useForm(formConfig);


  const [allValues, setAllValues] = useState({
    first_name: "",
    last_name: "",
    profession: "",
    gender: "",
    mail: "",
    phone: "",
    adress: "",
    password: "",
  });
  const changeHandler = async (text, name) => {
    console.log(name, text);
    await setAllValues({ ...allValues, [name]: text });
    console.log(allValues);
  };

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.All,
      allowsEditing: true,
      aspect: [4, 3],
      quality: 1,
    });

    console.log(result);

    if (!result.cancelled) {
      setImage(result.uri);
    }
  };
  return (
    <>
      <ImageBackground
        source={{
          uri:
            "https://compote.slate.com/images/ad27ef8a-0ea1-46b7-b515-415c4af18528.jpg?width=960",
        }}
        style={styles.image}
      >
        <ScrollView style={{ marginBottom: 10 }}>
          <View
            style={{
              flex: 1,
              alignItems: "center",
              justifyContent: "center",
            }}
          >
            <Image source={require("../assets/formini.png")} />
          </View>
          <View
            style={{
              flex: 1,
              justifyContent: "center",
              alignItems: "center",
              marginHorizontal: width * 0.1,
            }}
          >
            <Input
              placeholder="E-mail"
              label={"Email"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "mail")}
              value={allValues.mail}
            />

            <Input
              placeholder=" Password"
              label={"Password"}
              labelStyle={{ color: "orange" }}
              secureTextEntry={true}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "password")}
              value={allValues.password}
            />
            <Input
              placeholder=" first Name"
              label={"First Name"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "first_name")}
              value={allValues.first_name}
            />
            <Input
              placeholder="Last Name"
              label={"Last Name"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "last_name")}
              value={allValues.last_name}
            />
            <Input
              placeholder="Profession"
              label={"Profession"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "profession")}
              value={allValues.profession}
            />
            <Text style={{ color: "orange" ,fontSize:15,fontWeight: 'bold',textAlign:'left', alignSelf: 'flex-start'}}>  Gender</Text>
            <Picker
              label={"Gender"}
              selectedValue={allValues.gender}
              style={{ height: 25, width: 300 ,color:'black',backgroundColor:'white',borderRadius: 10,}}
              onValueChange={(itemValue, itemIndex) =>{
                changeHandler(itemValue, "gender")
              }
          
              }
            >
              <Picker.Item label="-Gender-" value="" />
              <Picker.Item label="Male" value="Male" />
              <Picker.Item label="Female" value="Female" />
            </Picker>
            <Input
              placeholder="Mail"
              label={"Mail"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "mail")}
              value={allValues.mail}
            />
            <Input
              placeholder="Phone"
              label={"Phone"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "phone")}
              value={allValues.phone}
            />
            <Input
              placeholder="Adress"
              label={"Adress"}
              labelStyle={{ color: "orange" }}
              inputStyle={{ backgroundColor: "white", borderRadius: 10 }}
              onChangeText={(text) => changeHandler(text, "adress")}
              value={allValues.adress}
            />
            <View
              style={{
                flex: 1,
                alignItems: "center",
                justifyContent: "center",
                marginBottom: 10,
              }}
            >
              <Button
                title="Pick an your photo from liabrary"
                titleStyle={{ color: "orange", alignSelf: "center" }}
                buttonStyle={{
                  width: width * 0.7,
                  backgroundColor: "white",
                  borderRadius: 30,
                  marginBottom: 10,
                }}
                onPress={pickImage}
              />
              {file && (
                <Image
                  source={{ uri: file }}
                  style={{ width: 200, height: 200, borderRadius: 25 }}
                />
              )}
            </View>
            <Button
              title="Sign Up"
              disab
              disabled={!formData.isValid}
              buttonStyle={{
                width: width * 0.5,
                backgroundColor: "orange",
                borderRadius: 30,
              }}
              titleStyle={{ color: "white", alignSelf: "center" }}
              onPress={() => {
                console.log(allValues);
                console.log();

                //navigation.navigate("Login");
              }}
            />
          </View>
        </ScrollView>
      </ImageBackground>
    </>
  );
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: "column",
  },
  image: {
    flex: 1,

    height: height,
    width: width,
    resizeMode: "contain",
    justifyContent: "center",
  },
  text: {
    color: "white",
    fontSize: 42,
    fontWeight: "bold",
    textAlign: "center",
  },
});

export default SignUp;
